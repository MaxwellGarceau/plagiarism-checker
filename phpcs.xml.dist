<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards with Short Array Syntax">
    <description>A custom set of rules based on WordPress Coding Standards, allowing the use of short array syntax.</description>

    <!-- Use WordPress Coding Standards -->
    <rule ref="WordPress" />

    <!-- Allow short array syntax ([]) -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found" />

    <!-- Custom configurations -->
    <arg name="extensions" value="php" />
    <arg name="cache" value=".phpcs.cache" />
    
    <!-- Check for cross-version support for PHP 8.3 and higher -->
    <config name="testVersion" value="8.3-" />

    <!-- Minimum WP version to check for usage of deprecated functions, classes, and function parameters -->
    <config name="minimum_supported_wp_version" value="6.6" />

    <!-- Exclude common files -->
    <exclude-pattern>*/\.idea/*</exclude-pattern>
    <exclude-pattern>*/\.github/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>wp-content/uploads/*</exclude-pattern>

    <!-- Disallow Yoda Conditions expressions -->
    <rule ref="Generic.ControlStructures.DisallowYodaConditions" />

    <!-- Enforce snake case for variables -->
    <rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase" />

    <!-- Allow underscores in theme template file names -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="is_theme" value="true" />
        </properties>
    </rule>

    <!-- Limit nesting levels -->
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="absoluteNestingLevel" value="4"/>
        </properties>
    </rule>

    <!-- Forbidden functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="create_function" value="null"/>
                <element key="sizeof" value="count"/>
                <element key="print_r" value="null"/>
                <element key="eval" value="null"/>
                <element key="compact" value="null"/>
            </property>
        </properties>
    </rule>

    <!-- AutoEscaped functions -->
    <rule ref="WordPress.Security.EscapeOutput">
        <properties>
            <property name="customAutoEscapedFunctions" type="array">
                <element value="rd_render_attributes" />
                <element value="rd_get_picture_html" />
            </property>
        </properties>
    </rule>

    <!-- Fix errors "No PHP code was found" in GitHub action. These errors show on GitHub actions. It can happen in case you run PHPCS into Docker container -->
    <rule ref="Internal.NoCodeFound">
        <severity>0</severity>
    </rule>

</ruleset>
